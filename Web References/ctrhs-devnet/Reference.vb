'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
'
Namespace ctrhs_devnet
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ExceptionMailerSoap", [Namespace]:="http://tempuri.org/MailException/ExceptionMailer")>  _
    Partial Public Class ExceptionMailer
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendGeneralMessageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendGeneralMessageRPCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://ctrhs-devnet/pardre1/MailException/ExceptionMailer.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SendCompleted As SendCompletedEventHandler
        
        '''<remarks/>
        Public Event SendGeneralMessageCompleted As SendGeneralMessageCompletedEventHandler
        
        '''<remarks/>
        Public Event SendGeneralMessageRPCCompleted As SendGeneralMessageRPCCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MailException/ExceptionMailer/Send", RequestNamespace:="http://tempuri.org/MailException/ExceptionMailer", OneWay:=true, Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Send(ByVal User As String, ByVal Machine As String, ByVal ExceptionString As String, ByVal recipient As String, ByVal AppName As String)
            Me.Invoke("Send", New Object() {User, Machine, ExceptionString, recipient, AppName})
        End Sub
        
        '''<remarks/>
        Public Function BeginSend(ByVal User As String, ByVal Machine As String, ByVal ExceptionString As String, ByVal recipient As String, ByVal AppName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Send", New Object() {User, Machine, ExceptionString, recipient, AppName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndSend(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendAsync(ByVal User As String, ByVal Machine As String, ByVal ExceptionString As String, ByVal recipient As String, ByVal AppName As String)
            Me.SendAsync(User, Machine, ExceptionString, recipient, AppName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendAsync(ByVal User As String, ByVal Machine As String, ByVal ExceptionString As String, ByVal recipient As String, ByVal AppName As String, ByVal userState As Object)
            If (Me.SendOperationCompleted Is Nothing) Then
                Me.SendOperationCompleted = AddressOf Me.OnSendOperationCompleted
            End If
            Me.InvokeAsync("Send", New Object() {User, Machine, ExceptionString, recipient, AppName}, Me.SendOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MailException/ExceptionMailer/SendGeneralMessage", RequestNamespace:="http://tempuri.org/MailException/ExceptionMailer", OneWay:=true, Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendGeneralMessage(ByVal recipients As String, ByVal subject As String, ByVal body As String, ByVal key As System.Guid)
            Me.Invoke("SendGeneralMessage", New Object() {recipients, subject, body, key})
        End Sub
        
        '''<remarks/>
        Public Function BeginSendGeneralMessage(ByVal recipients As String, ByVal subject As String, ByVal body As String, ByVal key As System.Guid, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SendGeneralMessage", New Object() {recipients, subject, body, key}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndSendGeneralMessage(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendGeneralMessageAsync(ByVal recipients As String, ByVal subject As String, ByVal body As String, ByVal key As System.Guid)
            Me.SendGeneralMessageAsync(recipients, subject, body, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendGeneralMessageAsync(ByVal recipients As String, ByVal subject As String, ByVal body As String, ByVal key As System.Guid, ByVal userState As Object)
            If (Me.SendGeneralMessageOperationCompleted Is Nothing) Then
                Me.SendGeneralMessageOperationCompleted = AddressOf Me.OnSendGeneralMessageOperationCompleted
            End If
            Me.InvokeAsync("SendGeneralMessage", New Object() {recipients, subject, body, key}, Me.SendGeneralMessageOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendGeneralMessageOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendGeneralMessageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendGeneralMessageCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://tempuri.org/MailException/ExceptionMailer/SendGeneralMessageRPC", RequestNamespace:="http://tempuri.org/MailException/ExceptionMailer", ResponseNamespace:="http://tempuri.org/MailException/ExceptionMailer")>  _
        Public Sub SendGeneralMessageRPC(ByVal recipients As String, ByVal subject As String, ByVal body As String, ByVal key As String)
            Me.Invoke("SendGeneralMessageRPC", New Object() {recipients, subject, body, key})
        End Sub
        
        '''<remarks/>
        Public Function BeginSendGeneralMessageRPC(ByVal recipients As String, ByVal subject As String, ByVal body As String, ByVal key As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SendGeneralMessageRPC", New Object() {recipients, subject, body, key}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndSendGeneralMessageRPC(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendGeneralMessageRPCAsync(ByVal recipients As String, ByVal subject As String, ByVal body As String, ByVal key As String)
            Me.SendGeneralMessageRPCAsync(recipients, subject, body, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendGeneralMessageRPCAsync(ByVal recipients As String, ByVal subject As String, ByVal body As String, ByVal key As String, ByVal userState As Object)
            If (Me.SendGeneralMessageRPCOperationCompleted Is Nothing) Then
                Me.SendGeneralMessageRPCOperationCompleted = AddressOf Me.OnSendGeneralMessageRPCOperationCompleted
            End If
            Me.InvokeAsync("SendGeneralMessageRPC", New Object() {recipients, subject, body, key}, Me.SendGeneralMessageRPCOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendGeneralMessageRPCOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendGeneralMessageRPCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendGeneralMessageRPCCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub SendCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub SendGeneralMessageCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")>  _
    Public Delegate Sub SendGeneralMessageRPCCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
